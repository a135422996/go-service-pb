syntax = "proto3";

package gorpc;
option go_package = "./gorpc";



// 根据需要增加状态
enum CommonResultCode {
  Success = 0;
}

enum Status {
  UnknownStatus = 0;
  StatusValid = 1;
  StatusInValid = 2;
}

enum BoolInt {
  BoolIntUnknown = 0;
  BoolIntTrue = 1;
  BoolIntFalse = 2;
}

message Empty {}

message Int64SelectController {
  repeated int64 values = 1;
  bool exclude = 2;
}

message IntSelectController {
  repeated int32 values = 1;
  bool exclude = 2;
}

message StringSelectController {
  repeated string values = 1;
  bool exclude = 2;
}

message Page {
  message OrderItem {
    string column = 1;
    bool asc = 2;
  }

  int64 pageNo = 1;
  int64 pageSize = 2;
  int64 startTime = 3;
  int64 endTime = 4;
  repeated OrderItem sortBy = 5;

  bool ignoreTotal = 6; // 忽略总条数

  bool ignoreStat = 7; // 忽略总条数
  bool ignoreList = 8; // 忽略列表
  repeated int64 ids = 9;
  repeated string groupBy = 10;
}

message CommonResult {
  CommonResultCode code = 1;
  string msg = 2;
}

message BaseReq {
  int64 timeZoneOffset = 1;
  string lan = 2;
}

message DeleteIdResp { repeated int64 failedIds = 1; }
message Ids { repeated int64 ids = 1; }

message Request {}

message Response { string msg = 1; }

message TransactionOperation {
  string table = 1;   // 表名
  string operate = 2; // delete,insert,update
  string data = 3;    // json格式
}

message TransactionReq { repeated TransactionOperation transactions = 1; }



message GameVo {
  int64 id = 1;
  string name = 2;
  string pkg = 3;
  string icon = 4;
  int64 status = 5;
  int64 createTime = 6;
  int64 updateTime = 7;
}

message GameReq { GameVo vo = 1; }
message GameListReq {
  Page page = 1;
  repeated string pkgs = 2;
  GameVo vo = 3;
}
message GameListRes {
  int64 total = 1;
  repeated GameVo list = 2;
}

message RelGameRankVo {
  int64 id = 1;
  int64 gameId = 2;
  int64 rankId = 3;
  int64 weight = 4;
  int64 createTime = 5;
  int64 updateTime = 6;
}

message RelGameRankReq { RelGameRankVo vo = 1; }
message RelGameRankListReq {
  Page page = 1;
  RelGameRankVo vo = 2;
}
message RelGameRankListRes {
  int64 total = 1;
  repeated RelGameRankVo list = 2;
}

message RelGameVpnGroupVo {
  int64 id = 1;
  int64 gameId = 2;
  string productCode = 3;
  int64 vpnGroupId = 4;
  int64 status = 5;
  int64 createTime = 6;
  int64 updateTime = 7;
}

message RelGameVpnGroupReq { RelGameVpnGroupVo vo = 1; }
message RelGameVpnGroupListReq {
  Page page = 1;
  repeated int64 gameIds = 2;
  RelGameVpnGroupVo vo = 3;
}
message RelGameVpnGroupListRes {
  int64 total = 1;
  repeated RelGameVpnGroupVo list = 2;
}

service GoGameClient {
  // 加速器游戏管理
  rpc GameAdd(GameVo) returns (GameVo);
  rpc GameUpdate(GameVo) returns (Empty);
  rpc GameDel(Ids) returns (Empty);
  rpc GameGet(GameReq) returns (GameVo);
  rpc GameList(GameListReq) returns (GameListRes);
  rpc GameAll(Request) returns (GameListRes);

  // 游戏榜单关联关系
  rpc RelGameRankAdd(RelGameRankVo) returns (RelGameRankVo);
  rpc RelGameRankUpdate(RelGameRankVo) returns (Empty);
  rpc RelGameRankDel(Ids) returns (Empty);
  rpc RelGameRankGet(RelGameRankReq) returns (RelGameRankVo);
  rpc RelGameRankList(RelGameRankListReq) returns (RelGameRankListRes);

  // 游戏地域关联关系
  rpc RelGameVpnGroupAdd(RelGameVpnGroupVo) returns (RelGameVpnGroupVo);
  rpc RelGameVpnGroupUpdate(RelGameVpnGroupVo) returns (Empty);
  rpc RelGameVpnGroupDel(Ids) returns (Empty);
  rpc RelGameVpnGroupGet(RelGameVpnGroupReq) returns (RelGameVpnGroupVo);
  rpc RelGameVpnGroupList(RelGameVpnGroupListReq)
      returns (RelGameVpnGroupListRes);
}



message I18nVo {
  string code = 1;
  string value = 2;
}

message UpgradeResVo {
  int64 id = 1;
  string title = 2;
  string path = 3;
  string fileMd5 = 4;
  string filePath = 5;
  string metadataId = 6;
  string createdAt = 7;
  string runtimeVersion = 8;
  int64 runtimeVersionCode = 9;
  string appVersionName = 10;
  int64 appVersionCode = 11;
  Status status = 12;
  string remark = 13;
  int64 createTime = 14;
  int64 updateTime = 15;
  int64 resSize = 16;
}

message UpgradeResConfigVo {
  int64 id = 1;
  int64 productId = 2;
  string platform = 3;
  string channel = 4;
  int64 resId = 5;
  int64 isForceUpdate = 6;
  string forceIntro = 7;
  string areaConfigs = 8;
  string versionConfigs = 9;
  int64 interval = 10;
  int64 upgradeRate = 11;
  string intro = 12;
  string apis = 13;
  Status status = 14;
  string remark = 15;
  string userIds = 16;
  int64 createTime = 17;
  int64 updateTime = 18;
  string forceVersionConfigs = 19;
  string forceAreaConfigs = 20;
  string runtimeVersionConfigs = 21;
  string title = 22;
  int64 isSilent = 23;
}

message UpgradePkgVo {
  int64 id = 1;
  int64 productId = 2;
  string platform = 3;
  string channel = 4;
  int64 versionCode = 5;
  string versionName = 6;
  string fileMd5 = 7;
  string areaConfigs = 8;
  string versionConfigs = 9;
  int64 interval = 10;
  int64 upgradeRate = 11;
  string intro = 12;
  string appStoreUrl = 13;
  string url = 14;
  string onlineUrls = 15;
  string userIds = 16;
  int64 isForceUpdate = 17;
  string forceIntro = 18;
  string forceVersionConfigs = 19;
  Status status = 20;
  string remark = 21;
  int64 createTime = 22;
  int64 updateTime = 23;
  string title = 24;
  string forceAreaConfigs = 25;
}

message UpgradeResConfigGetReq {
  Page page = 1;
  int64 id = 2;
}

message UpgradeResConfigListReq {
  Page page = 1;
  UpgradeResConfigVo vo = 2;
}

message UpgradeResConfigListResp {
  int64 total = 1;
  repeated UpgradeResConfigVo list = 2;
}

message UpgradePkgGetReq { UpgradePkgVo vo = 1; }

message UpgradePkgListReq {
  Page page = 1;
  UpgradePkgVo vo = 2;
}

message UpgradePkgListResp {
  int64 total = 1;
  repeated UpgradePkgVo list = 2;
}

message UpgradeResGetReq { UpgradeResVo vo = 1; }

message UpgradeResListReq {
  Page page = 1;
  UpgradeResVo vo = 2;
}
message UpgradeResListResp {
  int64 total = 1;
  repeated UpgradeResVo list = 2;
}

message ResourceDelReq {
  repeated int64 ids = 1;
  string fileMd5 = 2;
}

message ConfigGetReq {
  int64 id = 1;    // ID
  string code = 2; // 类型标识
}

// GlobalParam
message GlobalParamVo {
  int64 id = 1;
  string paramKey = 2;
  string paramValue = 3;
  string valueType = 4;
  float minValue = 5;
  float maxValue = 6;
  string name = 7;
  BoolInt editable = 8;
  BoolInt nullable = 9;
  BoolInt hidden = 10;
  BoolInt mutiLang = 11;
  int64 sort = 12;
  string remark = 13;
  BoolInt apiExport = 14;
  string apiExportName = 15;
  int64 createTime = 16;
  int64 updateTime = 17;
}

message GlobalParamListReq {
  Page page = 1;
  GlobalParamVo vo = 2;
};

message GlobalParamListResp {
  int64 total = 1;
  repeated GlobalParamVo list = 2;
};
// end GlobalParam

// Product
message ProductVo {
  int64 id = 1;
  string code = 2;
  string name = 3;
  string domain = 4;
  Status status = 5;
  string langs = 6;
  string defaultLang = 7;
  string remark = 8;
  int64 createTime = 9;
  int64 updateTime = 10;
}

message ProductListReq {
  Page page = 1;
  ProductVo vo = 4;
}

message ProductListResp {
  int64 total = 1;
  repeated ProductVo list = 2;
}

// ProductParam
message ProductParamVo {
  int64 id = 1;
  string productCode = 2;
  string paramKey = 3;
  string paramValue = 4;
  string valueType = 5;
  float minValue = 6;
  float maxValue = 7;
  string name = 8;
  bool editable = 9;
  bool nullable = 10;
  bool hidden = 11;
  bool mutiLang = 12;
  int64 sort = 13;
  string remark = 14;
  bool apiExport = 15;
  string apiExportName = 16;
  int64 createTime = 17;
  int64 updateTime = 18;
}

message ProductParamListReq { ProductParamVo vo = 1; }

message ProductParamListResp {
  int64 total = 1;
  repeated ProductParamVo list = 2;
}

message ProductActionVo {
  int64 id = 1;
  string productCode = 2;
  string imgUrl = 3;
  string actionType = 4;
  string actionData = 5;
  string title = 6;
  int64 status = 7;
  int64 createTime = 8;
  int64 updateTime = 9;
}

message ProductActionReq { ProductActionVo vo = 1; }
message ProductActionListReq {
  Page page = 1;
  ProductActionVo vo = 2;
}
message ProductActionListRes {
  int64 total = 1;
  repeated ProductActionVo list = 2;
}

// AreaParam
message AreaParamVo {
  int64 id = 1;
  string productCode = 2;
  string name = 3;
  string areas = 4;
  string paramValue = 5;
  Status status = 6;
  int64 sort = 7;
  string remark = 8;
  int64 createTime = 9;
  int64 updateTime = 10;
  string version = 11;
}

message AreaParamListReq {
  Page page = 1;
  AreaParamVo vo = 2;
}

message AreaParamListResp {
  int64 total = 1;
  repeated AreaParamVo list = 2;
}
// end AreaParam

message DictVo {
  int64 id = 1;
  string productCode = 2;
  int64 parentId = 3;
  string dataType = 4;
  string name = 5;
  string payload = 6;
  int64 sort = 7;
  int64 status = 8;
  string remark = 9;
  int64 createTime = 10;
  int64 updateTime = 11;
}

message DictGetReq { DictVo vo = 1; }

message DictListReq {
  Page page = 1;
  DictVo vo = 2;
}

message DictListResp {
  int64 total = 1;
  repeated DictVo list = 2;
}

// NationalLanguage
message NationalLanguageVo {
  int64 id = 1;
  string tbName = 2;
  int64 tbRowId = 3;
  string tbFieldName = 4;
  string lan = 5;
  string value = 6;
  Status status = 7;
  int64 updateTime = 8;
  int64 createTime = 9;
}

message NationalLanguageListReq {
  Page page = 1;
  NationalLanguageVo vo = 2;
}

message NationalLanguageListResp {
  int64 total = 1;
  repeated NationalLanguageVo list = 2;
}
// end NationalLanguage

// Tip
message TipVo {
  int64 id = 1;
  string productCode = 2;
  string paramKey = 3;
  string paramValue = 4;
  repeated I18nVo i18ns = 5;
  string code = 6;
  int64 showType = 7;
  int64 sort = 8;
  string remark = 9;
  int64 createTime = 10;
  int64 updateTime = 11;
}

message TipListReq {
  Page page = 1;
  TipVo vo = 2;
}

message TipListResp {
  int64 total = 1;
  repeated TipVo list = 2;
}

message TipKey {
  string productCode = 1;
  string paramKey = 2;
}

message TipDelReq {
  repeated int64 ids = 1;
  repeated TipKey keys = 2;
}
// end Tip

message UpgradePkgPlanVo {
  int64 id = 1;
  string productCode = 2; // 产品code
  string areas = 3;       // 地区列表
  int64 sort = 4;
  Status status = 5; // 状态
  string remark = 6;
  int64 createTime = 7;
  int64 updateTime = 8;
}

message UpgradePkgPlanDetailVo {
  int64 id = 1;
  int64 planId = 2;                     // 方案ID
  string platform = 3;                  // 平台
  string channel = 4;                   // 渠道
  string name = 5;                      // 名称
  int64 ver = 6;                        // 版本号
  string url = 7;                       // 商店地址
  string websiteUrl = 8;                // 官网地址
  string directUrl = 9;                 // 直接下载地址
  string md5 = 10;                      // MD5
  string info = 11;                     // 更新信息
  string testUpgradePolicyConfig = 12;  // 测试更新策略配置
  string upgradePolicyConfig = 13;      // 更新策略配置
  string forceUpgradePolicyConfig = 14; // 强制更新策略
  Status status = 15;                   // 状态
  string remark = 16;
  int64 createTime = 17;
  int64 updateTime = 18;
}

message UpgradePkgPlanListReq {
  Page page = 1;
  UpgradePkgPlanVo vo = 2;
}

message UpgradePkgPlanListResp {
  int64 total = 1;
  repeated UpgradePkgPlanVo list = 2;
}

message UpgradePkgPlanDetailListReq {
  Page page = 1;
  UpgradePkgPlanDetailVo vo = 2;
  repeated int64 planIds = 3;
}

message UpgradePkgPlanDetailListResp {
  int64 total = 1;
  repeated UpgradePkgPlanDetailVo list = 2;
}

message UpgradeResPlanVo {
  int64 id = 1;
  string productCode = 2; // 产品code
  string areas = 3;       // 地区列表
  int64 sort = 4;
  Status status = 5; // 状态
  string remark = 6;
  int64 createTime = 7;
  int64 updateTime = 8;
}

message UpgradeResPlanDetailVo {
  int64 id = 1;               // ID
  int64 planId = 2;           // 方案ID
  string title = 3;           // 标题
  string path = 4;            // 解压后的资源路径
  string fileMd5 = 5;         // zip文件md5值
  string filePath = 6;        // zip文件路径
  int64 resSize = 7;          // 资源大小
  string metadataId = 8;      // metadata.json文件内容sh256 hash值
  string createdAt = 9;       // new Date(metadataStat.birthtime).toISOString()
  string runtimeVersion = 10; // expo sdk 版本
  int64 runtimeVersionCode = 11; // 资源版本号
  string appVersionName = 12;    // app 版本名称
  int64 appVersionCode = 13;     // app 版本号
  Status status = 14;            // 状态,1=正常,2=冻结
  string remark = 15;            // 备注
  int64 createTime = 16;         // 创建时间秒
  int64 updateTime = 17;         // 修改时间秒
}

message UpgradeResPlanListReq {
  Page page = 1;
  UpgradeResPlanVo vo = 2;
}

message UpgradeResPlanListResp {
  int64 total = 1;
  repeated UpgradeResPlanVo list = 2;
}

message UpgradeResPlanDetailListReq {
  Page page = 1;
  UpgradeResPlanDetailVo vo = 2;
  repeated int64 planIds = 3;
}

message UpgradeResPlanDetailListResp {
  int64 total = 1;
  repeated UpgradeResPlanDetailVo list = 2;
}

// 基础服务： 产品管理，产品配置，升级配置、更新资源管理，资源版本管理，全局配置
service GoPmpClient {
  rpc Ping(Request) returns (Response);

  // GlobalParamVo
  rpc GlobalParamAdd(GlobalParamVo) returns (GlobalParamVo);
  rpc GlobalParamUpdate(GlobalParamVo) returns (GlobalParamVo);
  rpc GlobalParamDel(Ids) returns (Empty);
  rpc GlobalParamGet(GlobalParamVo) returns (GlobalParamVo);
  rpc GlobalParamList(GlobalParamListReq) returns (GlobalParamListResp);

  // ProductVo
  rpc ProductAdd(ProductVo) returns (ProductVo);
  rpc ProductUpdate(ProductVo) returns (Empty);
  rpc ProductDel(Ids) returns (Empty);
  rpc ProductGet(ProductVo) returns (ProductVo);
  rpc ProductList(ProductListReq) returns (ProductListResp);
  rpc ProductAll(Request) returns (ProductListResp);

  // ProductParamVo
  // rpc ProductParamAdd(ProductParamVo) returns (ProductParamVo);
  rpc ProductParamUpdate(ProductParamVo) returns (Empty);
  // rpc ProductParamDel(Ids) returns (Empty);
  rpc ProductParamGet(ProductParamVo) returns (ProductParamVo);
  rpc ProductParamList(ProductParamListReq) returns (ProductParamListResp);

  // ProductAction 产品行为配置
  rpc ProductActionAdd(ProductActionVo) returns (ProductActionVo);
  rpc ProductActionUpdate(ProductActionVo) returns (Empty);
  rpc ProductActionDel(Ids) returns (Empty);
  rpc ProductActionGet(ProductActionReq) returns (ProductActionVo);
  rpc ProductActionList(ProductActionListReq) returns (ProductActionListRes);

  // AreaParamVo
  rpc AreaParamAdd(AreaParamVo) returns (AreaParamVo);
  rpc AreaParamUpdate(AreaParamVo) returns (AreaParamVo);
  rpc AreaParamDel(Ids) returns (Empty);
  rpc AreaParamGet(AreaParamVo) returns (AreaParamVo);
  rpc AreaParamList(AreaParamListReq) returns (AreaParamListResp);

  // NationalLanguage
  rpc NationalLanguageAdd(NationalLanguageVo) returns (NationalLanguageVo);
  rpc NationalLanguageUpdate(NationalLanguageVo) returns (NationalLanguageVo);
  rpc NationalLanguageDel(Ids) returns (Empty);
  rpc NationalLanguageGet(NationalLanguageVo) returns (NationalLanguageVo);
  rpc NationalLanguageList(NationalLanguageListReq)
      returns (NationalLanguageListResp);

  // Tip
  rpc TipAdd(TipVo) returns (TipVo);
  rpc TipUpdate(TipVo) returns (TipVo);
  rpc TipDel(TipDelReq) returns (Empty);
  rpc TipGet(TipVo) returns (TipVo);
  rpc TipList(TipListReq) returns (TipListResp);

  // UpgradeRes 热更新代码资源管理
  rpc UpgradeResAdd(UpgradeResVo) returns (UpgradeResVo);
  rpc UpgradeResUpdate(UpgradeResVo) returns (Empty);
  rpc UpgradeResDel(ResourceDelReq) returns (Empty);
  rpc UpgradeResGet(UpgradeResGetReq) returns (UpgradeResVo);
  rpc UpgradeResList(UpgradeResListReq) returns (UpgradeResListResp);

  // UpgradePkg app 包更新管理
  rpc UpgradePkgAdd(UpgradePkgVo) returns (UpgradePkgVo);
  rpc UpgradePkgUpdate(UpgradePkgVo) returns (Empty);
  rpc UpgradePkgDel(Ids) returns (Empty);
  rpc UpgradePkgGet(UpgradePkgGetReq) returns (UpgradePkgVo);
  rpc UpgradePkgList(UpgradePkgListReq) returns (UpgradePkgListResp);

  // UpgradeResConfig 热更新【代码资源】配置管理，控制哪些版本地区的用户可以更新
  rpc UpgradeResConfigAdd(UpgradeResConfigVo) returns (UpgradeResConfigVo);
  rpc UpgradeResConfigUpdate(UpgradeResConfigVo) returns (Empty);
  rpc UpgradeResConfigDel(Ids) returns (Empty);
  rpc UpgradeResConfigGet(UpgradeResConfigGetReq) returns (UpgradeResConfigVo);
  rpc UpgradeResConfigList(UpgradeResConfigListReq)
      returns (UpgradeResConfigListResp);

  rpc DictAdd(DictVo) returns (DictVo);
  rpc DictUpdate(DictVo) returns (Empty);
  rpc DictDel(Ids) returns (Empty);
  rpc DictGet(DictGetReq) returns (DictVo);
  rpc DictList(DictListReq) returns (DictListResp);

  // UpgradePkgPlan
  rpc UpgradePkgPlanAdd(UpgradePkgPlanVo) returns (UpgradePkgPlanVo);
  rpc UpgradePkgPlanUpdate(UpgradePkgPlanVo) returns (Empty);
  rpc UpgradePkgPlanDel(Ids) returns (Empty);
  rpc UpgradePkgPlanGet(UpgradePkgPlanVo) returns (UpgradePkgPlanVo);
  rpc UpgradePkgPlanList(UpgradePkgPlanListReq)
      returns (UpgradePkgPlanListResp);

  // UpgradePkgPlanDetail
  rpc UpgradePkgPlanDetailAdd(UpgradePkgPlanDetailVo)
      returns (UpgradePkgPlanDetailVo);
  rpc UpgradePkgPlanDetailUpdate(UpgradePkgPlanDetailVo) returns (Empty);
  rpc UpgradePkgPlanDetailDel(Ids) returns (Empty);
  rpc UpgradePkgPlanDetailGet(UpgradePkgPlanDetailVo)
      returns (UpgradePkgPlanDetailVo);
  rpc UpgradePkgPlanDetailList(UpgradePkgPlanDetailListReq)
      returns (UpgradePkgPlanDetailListResp);

  // UpgradeResPlan
  rpc UpgradeResPlanAdd(UpgradeResPlanVo) returns (UpgradeResPlanVo);
  rpc UpgradeResPlanUpdate(UpgradeResPlanVo) returns (Empty);
  rpc UpgradeResPlanDel(Ids) returns (Empty);
  rpc UpgradeResPlanGet(UpgradeResPlanVo) returns (UpgradeResPlanVo);
  rpc UpgradeResPlanList(UpgradeResPlanListReq)
      returns (UpgradeResPlanListResp);

  // UpgradeResPlanDetail
  rpc UpgradeResPlanDetailAdd(UpgradeResPlanDetailVo)
      returns (UpgradeResPlanDetailVo);
  rpc UpgradeResPlanDetailUpdate(UpgradeResPlanDetailVo) returns (Empty);
  rpc UpgradeResPlanDetailDel(Ids) returns (Empty);
  rpc UpgradeResPlanDetailGet(UpgradeResPlanDetailVo)
      returns (UpgradeResPlanDetailVo);
  rpc UpgradeResPlanDetailList(UpgradeResPlanDetailListReq)
      returns (UpgradeResPlanDetailListResp);
}

// 根据需要增加状态


// 后续扩展
// pmp 模块：
// 登录
// 角色管理(sys_role)
// 用户管理(sys_user)
// 菜单管理(sys_menu-CRUD(5个权限))
// 字典管理(sys_dict)，组织管理(sys_dep)
// 岗位管理(sys_post)
service GoSysClient {
  rpc Ping(Request) returns (Response);
  //登录
  rpc Login(BaseReq) returns (Response);
}



// Account
message AccountVo {
  int64 id = 1;
  string userUuid = 2;        // 用户UUID
  string productCode = 3;     // 产品ID
  string username = 4;        // 用户名
  string password = 5;        // 密码
  string accountKey = 6;      // 账号KEY
  string accountPassword = 7; // 账号密码
  BoolInt whitelistUser = 8;  // 白名单用户
  string area = 9;            // 指定地区
  int64 accountType = 10;     // 账号类型
  int64 registMode = 11;      // 注册方式
  BoolInt activated = 12;     // 是否激活
  string config = 13;         // 配置
  Status status = 14;         // 状态
  string remark = 15;         // 备注
  string deviceId = 16;       // 设备ID
  string platform = 17;       // 平台
  string channel = 18;        // 渠道
  string deviceModel = 19;    // 设备型号
  string deviceOs = 20;       // 设备系统
  int64 timezone = 21;        // 时区
  string lang = 22;           // 语言
  int64 appVer = 23;          // 产品版本号
  string ip = 24;
  string country = 25;  // 国家
  string province = 26; // 省份
  string city = 27;     // 城市
  string isp = 28;      // ISP
  int64 createTime = 29;
  int64 updateTime = 30;
  string version = 31;          // 数据版本
  string sessionId = 32;        // 登录凭证
  int64 sessionCreateTime = 33; // 凭证创建时间
}

message AccountListReq {
  Page page = 1;
  AccountVo vo = 2;
}

message AccountListResp {
  int64 total = 1;
  repeated AccountVo list = 2;
}

// AccountDevice
message AccountDeviceVo {
  int64 id = 1;
  int64 accountId = 2;         // 用户ID
  int64 deviceId = 3;          // 设备ID
  string sessionId = 4;        // 登录凭证
  int64 sessionCreateTime = 5; // 凭证创建时间
  int64 updateTime = 6;
  int64 createTime = 7;
}

message AccountDeviceListReq {
  Page page = 1;
  AccountDeviceVo vo = 2;
}

message AccountDeviceListResp {
  int64 total = 1;
  repeated AccountDeviceVo list = 2;
}

message DeviceVo {
  int64 id = 1;
  string productCode = 2;
  string deviceId = 3;
  string accountKey = 4;
  string accountPassword = 5;
  string platform = 6;
  string channel = 7;
  string deviceModel = 8;
  string deviceOs = 9;
  int64 timezone = 10;
  string lang = 11;
  int64 appVer = 12;
  string ip = 13;
  string country = 14;
  string province = 15;
  string city = 16;
  string isp = 17;
  int64 createTime = 18;
  int64 updateTime = 19;
  int64 status = 20;
  string refer = 21;
}

message DeviceListReq {
  Page page = 1;
  DeviceVo vo = 2;
}
message DeviceListRes {
  int64 total = 1;
  repeated DeviceVo list = 2;
}

message UserAppConfigVo {
  int64 id = 1;
  string deviceId = 2;
  string key = 3;
  string value = 4;
  Status status = 5;
  int64 createTime = 6;
  int64 updateTime = 7;
}
message UserAppConfigGetReq { UserAppConfigVo vo = 1; }
message UserAppConfigListReq {
  Page page = 1;
  UserAppConfigVo vo = 2;
}
message UserAppConfigListRes {
  int64 total = 1;
  repeated UserAppConfigVo list = 2;
}

// 用户模块
service GoUserClient {
  rpc Ping(Request) returns (Response);
  // 登录
  rpc Login(BaseReq) returns (Response);

  // 用户app配置管理（ring）
  rpc UserAppConfigAdd(UserAppConfigVo) returns (UserAppConfigVo);
  rpc UserAppConfigUpdate(UserAppConfigVo) returns (UserAppConfigVo);
  rpc UserAppConfigDel(Ids) returns (Empty);
  rpc UserAppConfigGet(UserAppConfigGetReq) returns (UserAppConfigVo);
  rpc UserAppConfigList(UserAppConfigListReq) returns (UserAppConfigListRes);

  // 设备管理
  rpc DeviceAdd(DeviceVo) returns (DeviceVo);
  rpc DeviceUpdate(DeviceVo) returns (DeviceVo);
  rpc DeviceDel(Ids) returns (Empty);
  rpc DeviceGet(DeviceVo) returns (DeviceVo);
  rpc DeviceList(DeviceListReq) returns (DeviceListRes);

  // Account
  rpc AccountAdd(AccountVo) returns (AccountVo);
  rpc AccountUpdate(AccountVo) returns (AccountVo);
  rpc AccountDel(Ids) returns (Empty);
  rpc AccountGet(AccountVo) returns (AccountVo);
  rpc AccountList(AccountListReq) returns (AccountListResp);

  // AccountDevice
  rpc AccountDeviceAdd(AccountDeviceVo) returns (AccountDeviceVo);
  rpc AccountDeviceUpdate(AccountDeviceVo) returns (AccountDeviceVo);
  rpc AccountDeviceDel(Ids) returns (Empty);
  rpc AccountDeviceGet(AccountDeviceVo) returns (AccountDeviceVo);
  rpc AccountDeviceList(AccountDeviceListReq) returns (AccountDeviceListResp);
}



// VpnTag 相关消息定义
message VpnTagVo {
  int64 id = 1;
  string productCode = 2;
  string type = 3;
  string name = 4;
  int64 sort = 5;
  Status status = 6;
  string remark = 7;
  int64 createTime = 8;
  int64 updateTime = 9;
}

message VpnTagGetReq { VpnTagVo vo = 1; }

message VpnTagListReq {
  Page page = 1;
  VpnTagVo vo = 2;
}

message VpnTagListResp {
  int64 total = 1;
  repeated VpnTagVo list = 2;
}

message VpnGroupVo {
  int64 id = 1;
  string productCode = 2;
  string name = 3;
  string icon = 4;
  int64 sort = 5;
  Status status = 6;
  string remark = 7;
  int64 createTime = 8;
  int64 updateTime = 9;
  string version = 10;
}
message VpnGroupAddReq {
  VpnGroupVo vo = 1;
  repeated int64 tagIds = 2;
}
message VpnGroupGetReq { VpnGroupVo vo = 1; }
message VpnGroupListReq {
  Page page = 1;
  VpnGroupVo vo = 2;
}
message VpnGroupListResp {
  int64 total = 1;
  repeated VpnGroupVo list = 2;
}

message VpnGroupTagVo {
  int64 id = 1;
  int64 groupId = 2;
  int64 tagId = 3;
  int64 createTime = 4;
  int64 updateTime = 5;
}

message VpnGroupTagListReq {
  Page page = 1;
  VpnGroupTagVo vo = 2;
  repeated int64 groupIds = 3;
  repeated int64 tagIds = 4;
}

message VpnGroupTagListResp {
  int64 total = 1;
  repeated VpnGroupTagVo list = 2;
}

message VpnLocationVo {
  int64 id = 1;
  int64 groupId = 2;
  string name = 3;
  string code = 4;
  string icon = 5;
  int64 type = 6;
  string displayPolicyConfig = 7;
  string routePolicyConfig = 8;
  int64 sort = 9;
  Status status = 10;
  string remark = 11;
  int64 createTime = 12;
  int64 updateTime = 13;
  string version = 14;
}

message VpnLocationExVo {
  VpnLocationVo vo = 1;
  string productCode = 2;
}

message VpnLocationGetReq { VpnLocationVo vo = 1; }
message VpnLocationListReq {
  Page page = 1;
  VpnLocationExVo vo = 2;
  repeated int64 groupIds = 3;
}
message VpnLocationListResp {
  int64 total = 1;
  repeated VpnLocationExVo list = 2;
}

message VpnServerVo {
  int64 id = 1;
  int64 instanceId = 2;
  string name = 3;
  string ip = 4;
  int64 port = 5;
  int64 pingPort = 6;
  string netConfig = 7;
  string routePolicyConfig = 8;
  string serverInfo = 9;
  Status status = 10;
  string remark = 11;
  int64 createTime = 12;
  int64 updateTime = 13;
  string version = 14;
}

message VpnServerListReq {
  Page page = 1;
  VpnServerVo vo = 2;
  string productCode = 3;
  // repeated int64 serverIds = 4; //只有统计使用,findList没有用到
  // repeated int64 locationIds = 5; //只有统计使用,findList没有用到
}

message VpnServerListResp {
  int64 total = 1;
  repeated VpnServerVo list = 2;
}

message VpnServerAddReq {
  VpnServerVo vo = 1;
  repeated int64 locationIds = 2;
}

message VpnServerLocationVo {
  int64 id = 1;
  int64 serverId = 2;
  int64 locationId = 3;
  int64 createTime = 4;
  int64 updateTime = 5;
  Status status = 6;
}

message VpnServerLocationListReq {
  Page page = 1;
  VpnServerLocationVo vo = 2;
  repeated int64 serverIds = 3;
  repeated int64 locationIds = 4;
}

message VpnServerLocationListResp {
  int64 total = 1;
  repeated VpnServerLocationVo list = 2;
}

message VpnLocationServerCountVo {
  int64 locationId = 1;
  int64 serverCount = 2;
}

message VpnLocationServerCountReq {
  Page page = 1;
  Status status = 2;
  repeated int64 serverIds = 3;
  repeated int64 locationIds = 4;
}

message VpnLocationServerCountResp {
  int64 total = 1;
  repeated VpnLocationServerCountVo list = 2;
}

// govpn 模块，VPN相关服务
service GoVpnClient {
  rpc Ping(Request) returns (Response);
  // 表的事务操作
  rpc Transaction(TransactionReq) returns (Empty);

  // VpnTag
  rpc VpnTagAdd(VpnTagVo) returns (VpnTagVo);
  rpc VpnTagUpdate(VpnTagVo) returns (Empty);
  rpc VpnTagDel(Ids) returns (Empty);
  rpc VpnTagGet(VpnTagGetReq) returns (VpnTagVo);
  rpc VpnTagList(VpnTagListReq) returns (VpnTagListResp);

  // VpnGroup
  rpc VpnGroupAdd(VpnGroupAddReq) returns (VpnGroupVo);
  rpc VpnGroupUpdate(VpnGroupAddReq) returns (Empty);
  rpc VpnGroupDel(Ids) returns (Empty);
  // rpc VpnGroupGet(VpnGroupGetReq) returns (VpnGroupVo);
  rpc VpnGroupList(VpnGroupListReq) returns (VpnGroupListResp);

  // VpnGroupTag
  rpc VpnGroupTagAdd(VpnGroupTagVo) returns (VpnGroupTagVo);
  rpc VpnGroupTagUpdate(VpnGroupTagVo) returns (Empty);
  rpc VpnGroupTagDel(Ids) returns (Empty);
  rpc VpnGroupTagGet(VpnGroupTagVo) returns (VpnGroupTagVo);
  rpc VpnGroupTagList(VpnGroupTagListReq) returns (VpnGroupTagListResp);

  // VpnLocation
  rpc VpnLocationAdd(VpnLocationVo) returns (VpnLocationVo);
  rpc VpnLocationUpdate(VpnLocationVo) returns (Empty);
  rpc VpnLocationDel(Ids) returns (Empty);
  rpc VpnLocationGet(VpnLocationGetReq) returns (VpnLocationVo);
  rpc VpnLocationList(VpnLocationListReq) returns (VpnLocationListResp);

  // VpnServer
  rpc VpnServerAdd(VpnServerAddReq) returns (VpnServerVo);
  rpc VpnServerUpdate(VpnServerAddReq) returns (Empty);
  rpc VpnServerDel(Ids) returns (Empty);
  rpc VpnServerGet(VpnServerVo) returns (VpnServerVo);
  rpc VpnServerList(VpnServerListReq) returns (VpnServerListResp);

  // VpnServerLocation
  rpc VpnServerLocationAdd(VpnServerLocationVo) returns (VpnServerLocationVo);
  rpc VpnServerLocationUpdate(VpnServerLocationVo) returns (Empty);
  rpc VpnServerLocationDel(Ids) returns (Empty);
  rpc VpnServerLocationGet(VpnServerLocationVo) returns (VpnServerLocationVo);
  rpc VpnServerLocationList(VpnServerLocationListReq)
      returns (VpnServerLocationListResp);

  // VpnLocationServerCount
  rpc VpnLocationServerCount(VpnLocationServerCountReq)
      returns (VpnLocationServerCountResp);
}
