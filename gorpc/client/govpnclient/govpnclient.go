// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: gorpc.proto

package govpnclient

import (
	"context"

	"github.com/a135422996/go-service-pb/gorpc/pb/gorpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AccountDeviceListReq         = gorpc.AccountDeviceListReq
	AccountDeviceListResp        = gorpc.AccountDeviceListResp
	AccountDeviceVo              = gorpc.AccountDeviceVo
	AccountListReq               = gorpc.AccountListReq
	AccountListResp              = gorpc.AccountListResp
	AccountVo                    = gorpc.AccountVo
	AreaParamListReq             = gorpc.AreaParamListReq
	AreaParamListResp            = gorpc.AreaParamListResp
	AreaParamVo                  = gorpc.AreaParamVo
	BaseReq                      = gorpc.BaseReq
	CommonResult                 = gorpc.CommonResult
	ConfigGetReq                 = gorpc.ConfigGetReq
	DeleteIdResp                 = gorpc.DeleteIdResp
	DeviceListReq                = gorpc.DeviceListReq
	DeviceListRes                = gorpc.DeviceListRes
	DeviceVo                     = gorpc.DeviceVo
	DictGetReq                   = gorpc.DictGetReq
	DictListReq                  = gorpc.DictListReq
	DictListResp                 = gorpc.DictListResp
	DictVo                       = gorpc.DictVo
	Empty                        = gorpc.Empty
	GameListReq                  = gorpc.GameListReq
	GameListRes                  = gorpc.GameListRes
	GameReq                      = gorpc.GameReq
	GameVo                       = gorpc.GameVo
	GlobalParamListReq           = gorpc.GlobalParamListReq
	GlobalParamListResp          = gorpc.GlobalParamListResp
	GlobalParamVo                = gorpc.GlobalParamVo
	I18NVo                       = gorpc.I18NVo
	Ids                          = gorpc.Ids
	Int64SelectController        = gorpc.Int64SelectController
	IntSelectController          = gorpc.IntSelectController
	NationalLanguageListReq      = gorpc.NationalLanguageListReq
	NationalLanguageListResp     = gorpc.NationalLanguageListResp
	NationalLanguageVo           = gorpc.NationalLanguageVo
	Page                         = gorpc.Page
	Page_OrderItem               = gorpc.Page_OrderItem
	ProductActionListReq         = gorpc.ProductActionListReq
	ProductActionListRes         = gorpc.ProductActionListRes
	ProductActionReq             = gorpc.ProductActionReq
	ProductActionVo              = gorpc.ProductActionVo
	ProductListReq               = gorpc.ProductListReq
	ProductListResp              = gorpc.ProductListResp
	ProductParamListReq          = gorpc.ProductParamListReq
	ProductParamListResp         = gorpc.ProductParamListResp
	ProductParamVo               = gorpc.ProductParamVo
	ProductVo                    = gorpc.ProductVo
	RelGameRankListReq           = gorpc.RelGameRankListReq
	RelGameRankListRes           = gorpc.RelGameRankListRes
	RelGameRankReq               = gorpc.RelGameRankReq
	RelGameRankVo                = gorpc.RelGameRankVo
	RelGameVpnGroupListReq       = gorpc.RelGameVpnGroupListReq
	RelGameVpnGroupListRes       = gorpc.RelGameVpnGroupListRes
	RelGameVpnGroupReq           = gorpc.RelGameVpnGroupReq
	RelGameVpnGroupVo            = gorpc.RelGameVpnGroupVo
	Request                      = gorpc.Request
	ResourceDelReq               = gorpc.ResourceDelReq
	Response                     = gorpc.Response
	StringSelectController       = gorpc.StringSelectController
	TipDelReq                    = gorpc.TipDelReq
	TipKey                       = gorpc.TipKey
	TipListReq                   = gorpc.TipListReq
	TipListResp                  = gorpc.TipListResp
	TipVo                        = gorpc.TipVo
	TransactionOperation         = gorpc.TransactionOperation
	TransactionReq               = gorpc.TransactionReq
	UpgradePkgGetReq             = gorpc.UpgradePkgGetReq
	UpgradePkgListReq            = gorpc.UpgradePkgListReq
	UpgradePkgListResp           = gorpc.UpgradePkgListResp
	UpgradePkgPlanDetailListReq  = gorpc.UpgradePkgPlanDetailListReq
	UpgradePkgPlanDetailListResp = gorpc.UpgradePkgPlanDetailListResp
	UpgradePkgPlanDetailVo       = gorpc.UpgradePkgPlanDetailVo
	UpgradePkgPlanListReq        = gorpc.UpgradePkgPlanListReq
	UpgradePkgPlanListResp       = gorpc.UpgradePkgPlanListResp
	UpgradePkgPlanVo             = gorpc.UpgradePkgPlanVo
	UpgradePkgVo                 = gorpc.UpgradePkgVo
	UpgradeResConfigGetReq       = gorpc.UpgradeResConfigGetReq
	UpgradeResConfigListReq      = gorpc.UpgradeResConfigListReq
	UpgradeResConfigListResp     = gorpc.UpgradeResConfigListResp
	UpgradeResConfigVo           = gorpc.UpgradeResConfigVo
	UpgradeResGetReq             = gorpc.UpgradeResGetReq
	UpgradeResListReq            = gorpc.UpgradeResListReq
	UpgradeResListResp           = gorpc.UpgradeResListResp
	UpgradeResPlanDetailListReq  = gorpc.UpgradeResPlanDetailListReq
	UpgradeResPlanDetailListResp = gorpc.UpgradeResPlanDetailListResp
	UpgradeResPlanDetailVo       = gorpc.UpgradeResPlanDetailVo
	UpgradeResPlanListReq        = gorpc.UpgradeResPlanListReq
	UpgradeResPlanListResp       = gorpc.UpgradeResPlanListResp
	UpgradeResPlanVo             = gorpc.UpgradeResPlanVo
	UpgradeResVo                 = gorpc.UpgradeResVo
	UserAppConfigGetReq          = gorpc.UserAppConfigGetReq
	UserAppConfigListReq         = gorpc.UserAppConfigListReq
	UserAppConfigListRes         = gorpc.UserAppConfigListRes
	UserAppConfigVo              = gorpc.UserAppConfigVo
	VpnGroupAddReq               = gorpc.VpnGroupAddReq
	VpnGroupGetReq               = gorpc.VpnGroupGetReq
	VpnGroupListReq              = gorpc.VpnGroupListReq
	VpnGroupListResp             = gorpc.VpnGroupListResp
	VpnGroupTagListReq           = gorpc.VpnGroupTagListReq
	VpnGroupTagListResp          = gorpc.VpnGroupTagListResp
	VpnGroupTagVo                = gorpc.VpnGroupTagVo
	VpnGroupVo                   = gorpc.VpnGroupVo
	VpnLocationExVo              = gorpc.VpnLocationExVo
	VpnLocationGetReq            = gorpc.VpnLocationGetReq
	VpnLocationListReq           = gorpc.VpnLocationListReq
	VpnLocationListResp          = gorpc.VpnLocationListResp
	VpnLocationServerCountReq    = gorpc.VpnLocationServerCountReq
	VpnLocationServerCountResp   = gorpc.VpnLocationServerCountResp
	VpnLocationServerCountVo     = gorpc.VpnLocationServerCountVo
	VpnLocationVo                = gorpc.VpnLocationVo
	VpnServerAddReq              = gorpc.VpnServerAddReq
	VpnServerListReq             = gorpc.VpnServerListReq
	VpnServerListResp            = gorpc.VpnServerListResp
	VpnServerLocationListReq     = gorpc.VpnServerLocationListReq
	VpnServerLocationListResp    = gorpc.VpnServerLocationListResp
	VpnServerLocationVo          = gorpc.VpnServerLocationVo
	VpnServerVo                  = gorpc.VpnServerVo
	VpnTagGetReq                 = gorpc.VpnTagGetReq
	VpnTagListReq                = gorpc.VpnTagListReq
	VpnTagListResp               = gorpc.VpnTagListResp
	VpnTagVo                     = gorpc.VpnTagVo

	GoVpnClient interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		// 表的事务操作
		Transaction(ctx context.Context, in *TransactionReq, opts ...grpc.CallOption) (*Empty, error)
		// VpnTag
		VpnTagAdd(ctx context.Context, in *VpnTagVo, opts ...grpc.CallOption) (*VpnTagVo, error)
		VpnTagUpdate(ctx context.Context, in *VpnTagVo, opts ...grpc.CallOption) (*Empty, error)
		VpnTagDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		VpnTagGet(ctx context.Context, in *VpnTagGetReq, opts ...grpc.CallOption) (*VpnTagVo, error)
		VpnTagList(ctx context.Context, in *VpnTagListReq, opts ...grpc.CallOption) (*VpnTagListResp, error)
		// VpnGroup
		VpnGroupAdd(ctx context.Context, in *VpnGroupAddReq, opts ...grpc.CallOption) (*VpnGroupVo, error)
		VpnGroupUpdate(ctx context.Context, in *VpnGroupAddReq, opts ...grpc.CallOption) (*Empty, error)
		VpnGroupDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		// rpc VpnGroupGet(VpnGroupGetReq) returns (VpnGroupVo);
		VpnGroupList(ctx context.Context, in *VpnGroupListReq, opts ...grpc.CallOption) (*VpnGroupListResp, error)
		// VpnGroupTag
		VpnGroupTagAdd(ctx context.Context, in *VpnGroupTagVo, opts ...grpc.CallOption) (*VpnGroupTagVo, error)
		VpnGroupTagUpdate(ctx context.Context, in *VpnGroupTagVo, opts ...grpc.CallOption) (*Empty, error)
		VpnGroupTagDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		VpnGroupTagGet(ctx context.Context, in *VpnGroupTagVo, opts ...grpc.CallOption) (*VpnGroupTagVo, error)
		VpnGroupTagList(ctx context.Context, in *VpnGroupTagListReq, opts ...grpc.CallOption) (*VpnGroupTagListResp, error)
		// VpnLocation
		VpnLocationAdd(ctx context.Context, in *VpnLocationVo, opts ...grpc.CallOption) (*VpnLocationVo, error)
		VpnLocationUpdate(ctx context.Context, in *VpnLocationVo, opts ...grpc.CallOption) (*Empty, error)
		VpnLocationDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		VpnLocationGet(ctx context.Context, in *VpnLocationGetReq, opts ...grpc.CallOption) (*VpnLocationVo, error)
		VpnLocationList(ctx context.Context, in *VpnLocationListReq, opts ...grpc.CallOption) (*VpnLocationListResp, error)
		// VpnServer
		VpnServerAdd(ctx context.Context, in *VpnServerAddReq, opts ...grpc.CallOption) (*VpnServerVo, error)
		VpnServerUpdate(ctx context.Context, in *VpnServerAddReq, opts ...grpc.CallOption) (*Empty, error)
		VpnServerDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		VpnServerGet(ctx context.Context, in *VpnServerVo, opts ...grpc.CallOption) (*VpnServerVo, error)
		VpnServerList(ctx context.Context, in *VpnServerListReq, opts ...grpc.CallOption) (*VpnServerListResp, error)
		// VpnServerLocation
		VpnServerLocationAdd(ctx context.Context, in *VpnServerLocationVo, opts ...grpc.CallOption) (*VpnServerLocationVo, error)
		VpnServerLocationUpdate(ctx context.Context, in *VpnServerLocationVo, opts ...grpc.CallOption) (*Empty, error)
		VpnServerLocationDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		VpnServerLocationGet(ctx context.Context, in *VpnServerLocationVo, opts ...grpc.CallOption) (*VpnServerLocationVo, error)
		VpnServerLocationList(ctx context.Context, in *VpnServerLocationListReq, opts ...grpc.CallOption) (*VpnServerLocationListResp, error)
		// VpnLocationServerCount
		VpnLocationServerCount(ctx context.Context, in *VpnLocationServerCountReq, opts ...grpc.CallOption) (*VpnLocationServerCountResp, error)
	}

	defaultGoVpnClient struct {
		cli zrpc.Client
	}
)

func NewGoVpnClient(cli zrpc.Client) GoVpnClient {
	return &defaultGoVpnClient{
		cli: cli,
	}
}

func (m *defaultGoVpnClient) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

// 表的事务操作
func (m *defaultGoVpnClient) Transaction(ctx context.Context, in *TransactionReq, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.Transaction(ctx, in, opts...)
}

// VpnTag
func (m *defaultGoVpnClient) VpnTagAdd(ctx context.Context, in *VpnTagVo, opts ...grpc.CallOption) (*VpnTagVo, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnTagAdd(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnTagUpdate(ctx context.Context, in *VpnTagVo, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnTagUpdate(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnTagDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnTagDel(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnTagGet(ctx context.Context, in *VpnTagGetReq, opts ...grpc.CallOption) (*VpnTagVo, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnTagGet(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnTagList(ctx context.Context, in *VpnTagListReq, opts ...grpc.CallOption) (*VpnTagListResp, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnTagList(ctx, in, opts...)
}

// VpnGroup
func (m *defaultGoVpnClient) VpnGroupAdd(ctx context.Context, in *VpnGroupAddReq, opts ...grpc.CallOption) (*VpnGroupVo, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnGroupAdd(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnGroupUpdate(ctx context.Context, in *VpnGroupAddReq, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnGroupUpdate(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnGroupDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnGroupDel(ctx, in, opts...)
}

// rpc VpnGroupGet(VpnGroupGetReq) returns (VpnGroupVo);
func (m *defaultGoVpnClient) VpnGroupList(ctx context.Context, in *VpnGroupListReq, opts ...grpc.CallOption) (*VpnGroupListResp, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnGroupList(ctx, in, opts...)
}

// VpnGroupTag
func (m *defaultGoVpnClient) VpnGroupTagAdd(ctx context.Context, in *VpnGroupTagVo, opts ...grpc.CallOption) (*VpnGroupTagVo, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnGroupTagAdd(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnGroupTagUpdate(ctx context.Context, in *VpnGroupTagVo, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnGroupTagUpdate(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnGroupTagDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnGroupTagDel(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnGroupTagGet(ctx context.Context, in *VpnGroupTagVo, opts ...grpc.CallOption) (*VpnGroupTagVo, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnGroupTagGet(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnGroupTagList(ctx context.Context, in *VpnGroupTagListReq, opts ...grpc.CallOption) (*VpnGroupTagListResp, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnGroupTagList(ctx, in, opts...)
}

// VpnLocation
func (m *defaultGoVpnClient) VpnLocationAdd(ctx context.Context, in *VpnLocationVo, opts ...grpc.CallOption) (*VpnLocationVo, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnLocationAdd(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnLocationUpdate(ctx context.Context, in *VpnLocationVo, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnLocationUpdate(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnLocationDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnLocationDel(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnLocationGet(ctx context.Context, in *VpnLocationGetReq, opts ...grpc.CallOption) (*VpnLocationVo, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnLocationGet(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnLocationList(ctx context.Context, in *VpnLocationListReq, opts ...grpc.CallOption) (*VpnLocationListResp, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnLocationList(ctx, in, opts...)
}

// VpnServer
func (m *defaultGoVpnClient) VpnServerAdd(ctx context.Context, in *VpnServerAddReq, opts ...grpc.CallOption) (*VpnServerVo, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnServerAdd(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnServerUpdate(ctx context.Context, in *VpnServerAddReq, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnServerUpdate(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnServerDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnServerDel(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnServerGet(ctx context.Context, in *VpnServerVo, opts ...grpc.CallOption) (*VpnServerVo, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnServerGet(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnServerList(ctx context.Context, in *VpnServerListReq, opts ...grpc.CallOption) (*VpnServerListResp, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnServerList(ctx, in, opts...)
}

// VpnServerLocation
func (m *defaultGoVpnClient) VpnServerLocationAdd(ctx context.Context, in *VpnServerLocationVo, opts ...grpc.CallOption) (*VpnServerLocationVo, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnServerLocationAdd(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnServerLocationUpdate(ctx context.Context, in *VpnServerLocationVo, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnServerLocationUpdate(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnServerLocationDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnServerLocationDel(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnServerLocationGet(ctx context.Context, in *VpnServerLocationVo, opts ...grpc.CallOption) (*VpnServerLocationVo, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnServerLocationGet(ctx, in, opts...)
}

func (m *defaultGoVpnClient) VpnServerLocationList(ctx context.Context, in *VpnServerLocationListReq, opts ...grpc.CallOption) (*VpnServerLocationListResp, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnServerLocationList(ctx, in, opts...)
}

// VpnLocationServerCount
func (m *defaultGoVpnClient) VpnLocationServerCount(ctx context.Context, in *VpnLocationServerCountReq, opts ...grpc.CallOption) (*VpnLocationServerCountResp, error) {
	client := gorpc.NewGoVpnClientClient(m.cli.Conn())
	return client.VpnLocationServerCount(ctx, in, opts...)
}
