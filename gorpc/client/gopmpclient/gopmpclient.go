// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: gorpc.proto

package gopmpclient

import (
	"context"

	"github.com/a135422996/go-service-pb/gorpc/pb/gorpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AccountDeviceListReq         = gorpc.AccountDeviceListReq
	AccountDeviceListResp        = gorpc.AccountDeviceListResp
	AccountDeviceVo              = gorpc.AccountDeviceVo
	AccountListReq               = gorpc.AccountListReq
	AccountListResp              = gorpc.AccountListResp
	AccountVo                    = gorpc.AccountVo
	AreaParamListReq             = gorpc.AreaParamListReq
	AreaParamListResp            = gorpc.AreaParamListResp
	AreaParamVo                  = gorpc.AreaParamVo
	BaseReq                      = gorpc.BaseReq
	CommonResult                 = gorpc.CommonResult
	ConfigGetReq                 = gorpc.ConfigGetReq
	DeleteIdResp                 = gorpc.DeleteIdResp
	DeviceListReq                = gorpc.DeviceListReq
	DeviceListRes                = gorpc.DeviceListRes
	DeviceVo                     = gorpc.DeviceVo
	DictGetReq                   = gorpc.DictGetReq
	DictListReq                  = gorpc.DictListReq
	DictListResp                 = gorpc.DictListResp
	DictVo                       = gorpc.DictVo
	Empty                        = gorpc.Empty
	GameListReq                  = gorpc.GameListReq
	GameListRes                  = gorpc.GameListRes
	GameReq                      = gorpc.GameReq
	GameVo                       = gorpc.GameVo
	GlobalParamListReq           = gorpc.GlobalParamListReq
	GlobalParamListResp          = gorpc.GlobalParamListResp
	GlobalParamVo                = gorpc.GlobalParamVo
	I18NVo                       = gorpc.I18NVo
	Ids                          = gorpc.Ids
	Int64SelectController        = gorpc.Int64SelectController
	IntSelectController          = gorpc.IntSelectController
	NationalLanguageListReq      = gorpc.NationalLanguageListReq
	NationalLanguageListResp     = gorpc.NationalLanguageListResp
	NationalLanguageVo           = gorpc.NationalLanguageVo
	Page                         = gorpc.Page
	Page_OrderItem               = gorpc.Page_OrderItem
	ProductActionListReq         = gorpc.ProductActionListReq
	ProductActionListRes         = gorpc.ProductActionListRes
	ProductActionReq             = gorpc.ProductActionReq
	ProductActionVo              = gorpc.ProductActionVo
	ProductListReq               = gorpc.ProductListReq
	ProductListResp              = gorpc.ProductListResp
	ProductParamListReq          = gorpc.ProductParamListReq
	ProductParamListResp         = gorpc.ProductParamListResp
	ProductParamVo               = gorpc.ProductParamVo
	ProductVo                    = gorpc.ProductVo
	RelGameRankListReq           = gorpc.RelGameRankListReq
	RelGameRankListRes           = gorpc.RelGameRankListRes
	RelGameRankReq               = gorpc.RelGameRankReq
	RelGameRankVo                = gorpc.RelGameRankVo
	RelGameVpnGroupListReq       = gorpc.RelGameVpnGroupListReq
	RelGameVpnGroupListRes       = gorpc.RelGameVpnGroupListRes
	RelGameVpnGroupReq           = gorpc.RelGameVpnGroupReq
	RelGameVpnGroupVo            = gorpc.RelGameVpnGroupVo
	Request                      = gorpc.Request
	ResourceDelReq               = gorpc.ResourceDelReq
	Response                     = gorpc.Response
	StringSelectController       = gorpc.StringSelectController
	TipDelReq                    = gorpc.TipDelReq
	TipKey                       = gorpc.TipKey
	TipListReq                   = gorpc.TipListReq
	TipListResp                  = gorpc.TipListResp
	TipVo                        = gorpc.TipVo
	TransactionOperation         = gorpc.TransactionOperation
	TransactionReq               = gorpc.TransactionReq
	UpgradePkgGetReq             = gorpc.UpgradePkgGetReq
	UpgradePkgListReq            = gorpc.UpgradePkgListReq
	UpgradePkgListResp           = gorpc.UpgradePkgListResp
	UpgradePkgPlanDetailListReq  = gorpc.UpgradePkgPlanDetailListReq
	UpgradePkgPlanDetailListResp = gorpc.UpgradePkgPlanDetailListResp
	UpgradePkgPlanDetailVo       = gorpc.UpgradePkgPlanDetailVo
	UpgradePkgPlanListReq        = gorpc.UpgradePkgPlanListReq
	UpgradePkgPlanListResp       = gorpc.UpgradePkgPlanListResp
	UpgradePkgPlanVo             = gorpc.UpgradePkgPlanVo
	UpgradePkgVo                 = gorpc.UpgradePkgVo
	UpgradeResConfigGetReq       = gorpc.UpgradeResConfigGetReq
	UpgradeResConfigListReq      = gorpc.UpgradeResConfigListReq
	UpgradeResConfigListResp     = gorpc.UpgradeResConfigListResp
	UpgradeResConfigVo           = gorpc.UpgradeResConfigVo
	UpgradeResGetReq             = gorpc.UpgradeResGetReq
	UpgradeResListReq            = gorpc.UpgradeResListReq
	UpgradeResListResp           = gorpc.UpgradeResListResp
	UpgradeResPlanDetailListReq  = gorpc.UpgradeResPlanDetailListReq
	UpgradeResPlanDetailListResp = gorpc.UpgradeResPlanDetailListResp
	UpgradeResPlanDetailVo       = gorpc.UpgradeResPlanDetailVo
	UpgradeResPlanListReq        = gorpc.UpgradeResPlanListReq
	UpgradeResPlanListResp       = gorpc.UpgradeResPlanListResp
	UpgradeResPlanVo             = gorpc.UpgradeResPlanVo
	UpgradeResVo                 = gorpc.UpgradeResVo
	UserAppConfigGetReq          = gorpc.UserAppConfigGetReq
	UserAppConfigListReq         = gorpc.UserAppConfigListReq
	UserAppConfigListRes         = gorpc.UserAppConfigListRes
	UserAppConfigVo              = gorpc.UserAppConfigVo
	VpnGroupAddReq               = gorpc.VpnGroupAddReq
	VpnGroupGetReq               = gorpc.VpnGroupGetReq
	VpnGroupListReq              = gorpc.VpnGroupListReq
	VpnGroupListResp             = gorpc.VpnGroupListResp
	VpnGroupTagListReq           = gorpc.VpnGroupTagListReq
	VpnGroupTagListResp          = gorpc.VpnGroupTagListResp
	VpnGroupTagVo                = gorpc.VpnGroupTagVo
	VpnGroupVo                   = gorpc.VpnGroupVo
	VpnLocationExVo              = gorpc.VpnLocationExVo
	VpnLocationGetReq            = gorpc.VpnLocationGetReq
	VpnLocationListReq           = gorpc.VpnLocationListReq
	VpnLocationListResp          = gorpc.VpnLocationListResp
	VpnLocationServerCountReq    = gorpc.VpnLocationServerCountReq
	VpnLocationServerCountResp   = gorpc.VpnLocationServerCountResp
	VpnLocationServerCountVo     = gorpc.VpnLocationServerCountVo
	VpnLocationVo                = gorpc.VpnLocationVo
	VpnServerAddReq              = gorpc.VpnServerAddReq
	VpnServerListReq             = gorpc.VpnServerListReq
	VpnServerListResp            = gorpc.VpnServerListResp
	VpnServerLocationListReq     = gorpc.VpnServerLocationListReq
	VpnServerLocationListResp    = gorpc.VpnServerLocationListResp
	VpnServerLocationVo          = gorpc.VpnServerLocationVo
	VpnServerVo                  = gorpc.VpnServerVo
	VpnTagGetReq                 = gorpc.VpnTagGetReq
	VpnTagListReq                = gorpc.VpnTagListReq
	VpnTagListResp               = gorpc.VpnTagListResp
	VpnTagVo                     = gorpc.VpnTagVo

	GoPmpClient interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		// GlobalParamVo
		GlobalParamAdd(ctx context.Context, in *GlobalParamVo, opts ...grpc.CallOption) (*GlobalParamVo, error)
		GlobalParamUpdate(ctx context.Context, in *GlobalParamVo, opts ...grpc.CallOption) (*GlobalParamVo, error)
		GlobalParamDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		GlobalParamGet(ctx context.Context, in *GlobalParamVo, opts ...grpc.CallOption) (*GlobalParamVo, error)
		GlobalParamList(ctx context.Context, in *GlobalParamListReq, opts ...grpc.CallOption) (*GlobalParamListResp, error)
		// ProductVo
		ProductAdd(ctx context.Context, in *ProductVo, opts ...grpc.CallOption) (*ProductVo, error)
		ProductUpdate(ctx context.Context, in *ProductVo, opts ...grpc.CallOption) (*Empty, error)
		ProductDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		ProductGet(ctx context.Context, in *ProductVo, opts ...grpc.CallOption) (*ProductVo, error)
		ProductList(ctx context.Context, in *ProductListReq, opts ...grpc.CallOption) (*ProductListResp, error)
		ProductAll(ctx context.Context, in *Request, opts ...grpc.CallOption) (*ProductListResp, error)
		// ProductParamVo
		ProductParamUpdate(ctx context.Context, in *ProductParamVo, opts ...grpc.CallOption) (*Empty, error)
		// rpc ProductParamDel(Ids) returns (Empty);
		ProductParamGet(ctx context.Context, in *ProductParamVo, opts ...grpc.CallOption) (*ProductParamVo, error)
		ProductParamList(ctx context.Context, in *ProductParamListReq, opts ...grpc.CallOption) (*ProductParamListResp, error)
		// ProductAction 产品行为配置
		ProductActionAdd(ctx context.Context, in *ProductActionVo, opts ...grpc.CallOption) (*ProductActionVo, error)
		ProductActionUpdate(ctx context.Context, in *ProductActionVo, opts ...grpc.CallOption) (*Empty, error)
		ProductActionDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		ProductActionGet(ctx context.Context, in *ProductActionReq, opts ...grpc.CallOption) (*ProductActionVo, error)
		ProductActionList(ctx context.Context, in *ProductActionListReq, opts ...grpc.CallOption) (*ProductActionListRes, error)
		// AreaParamVo
		AreaParamAdd(ctx context.Context, in *AreaParamVo, opts ...grpc.CallOption) (*AreaParamVo, error)
		AreaParamUpdate(ctx context.Context, in *AreaParamVo, opts ...grpc.CallOption) (*AreaParamVo, error)
		AreaParamDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		AreaParamGet(ctx context.Context, in *AreaParamVo, opts ...grpc.CallOption) (*AreaParamVo, error)
		AreaParamList(ctx context.Context, in *AreaParamListReq, opts ...grpc.CallOption) (*AreaParamListResp, error)
		// NationalLanguage
		NationalLanguageAdd(ctx context.Context, in *NationalLanguageVo, opts ...grpc.CallOption) (*NationalLanguageVo, error)
		NationalLanguageUpdate(ctx context.Context, in *NationalLanguageVo, opts ...grpc.CallOption) (*NationalLanguageVo, error)
		NationalLanguageDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		NationalLanguageGet(ctx context.Context, in *NationalLanguageVo, opts ...grpc.CallOption) (*NationalLanguageVo, error)
		NationalLanguageList(ctx context.Context, in *NationalLanguageListReq, opts ...grpc.CallOption) (*NationalLanguageListResp, error)
		// Tip
		TipAdd(ctx context.Context, in *TipVo, opts ...grpc.CallOption) (*TipVo, error)
		TipUpdate(ctx context.Context, in *TipVo, opts ...grpc.CallOption) (*TipVo, error)
		TipDel(ctx context.Context, in *TipDelReq, opts ...grpc.CallOption) (*Empty, error)
		TipGet(ctx context.Context, in *TipVo, opts ...grpc.CallOption) (*TipVo, error)
		TipList(ctx context.Context, in *TipListReq, opts ...grpc.CallOption) (*TipListResp, error)
		// UpgradeRes 热更新代码资源管理
		UpgradeResAdd(ctx context.Context, in *UpgradeResVo, opts ...grpc.CallOption) (*UpgradeResVo, error)
		UpgradeResUpdate(ctx context.Context, in *UpgradeResVo, opts ...grpc.CallOption) (*Empty, error)
		UpgradeResDel(ctx context.Context, in *ResourceDelReq, opts ...grpc.CallOption) (*Empty, error)
		UpgradeResGet(ctx context.Context, in *UpgradeResGetReq, opts ...grpc.CallOption) (*UpgradeResVo, error)
		UpgradeResList(ctx context.Context, in *UpgradeResListReq, opts ...grpc.CallOption) (*UpgradeResListResp, error)
		// UpgradePkg app 包更新管理
		UpgradePkgAdd(ctx context.Context, in *UpgradePkgVo, opts ...grpc.CallOption) (*UpgradePkgVo, error)
		UpgradePkgUpdate(ctx context.Context, in *UpgradePkgVo, opts ...grpc.CallOption) (*Empty, error)
		UpgradePkgDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		UpgradePkgGet(ctx context.Context, in *UpgradePkgGetReq, opts ...grpc.CallOption) (*UpgradePkgVo, error)
		UpgradePkgList(ctx context.Context, in *UpgradePkgListReq, opts ...grpc.CallOption) (*UpgradePkgListResp, error)
		// UpgradeResConfig 热更新【代码资源】配置管理，控制哪些版本地区的用户可以更新
		UpgradeResConfigAdd(ctx context.Context, in *UpgradeResConfigVo, opts ...grpc.CallOption) (*UpgradeResConfigVo, error)
		UpgradeResConfigUpdate(ctx context.Context, in *UpgradeResConfigVo, opts ...grpc.CallOption) (*Empty, error)
		UpgradeResConfigDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		UpgradeResConfigGet(ctx context.Context, in *UpgradeResConfigGetReq, opts ...grpc.CallOption) (*UpgradeResConfigVo, error)
		UpgradeResConfigList(ctx context.Context, in *UpgradeResConfigListReq, opts ...grpc.CallOption) (*UpgradeResConfigListResp, error)
		DictAdd(ctx context.Context, in *DictVo, opts ...grpc.CallOption) (*DictVo, error)
		DictUpdate(ctx context.Context, in *DictVo, opts ...grpc.CallOption) (*Empty, error)
		DictDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		DictGet(ctx context.Context, in *DictGetReq, opts ...grpc.CallOption) (*DictVo, error)
		DictList(ctx context.Context, in *DictListReq, opts ...grpc.CallOption) (*DictListResp, error)
		// UpgradePkgPlan
		UpgradePkgPlanAdd(ctx context.Context, in *UpgradePkgPlanVo, opts ...grpc.CallOption) (*UpgradePkgPlanVo, error)
		UpgradePkgPlanUpdate(ctx context.Context, in *UpgradePkgPlanVo, opts ...grpc.CallOption) (*Empty, error)
		UpgradePkgPlanDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		UpgradePkgPlanGet(ctx context.Context, in *UpgradePkgPlanVo, opts ...grpc.CallOption) (*UpgradePkgPlanVo, error)
		UpgradePkgPlanList(ctx context.Context, in *UpgradePkgPlanListReq, opts ...grpc.CallOption) (*UpgradePkgPlanListResp, error)
		// UpgradePkgPlanDetail
		UpgradePkgPlanDetailAdd(ctx context.Context, in *UpgradePkgPlanDetailVo, opts ...grpc.CallOption) (*UpgradePkgPlanDetailVo, error)
		UpgradePkgPlanDetailUpdate(ctx context.Context, in *UpgradePkgPlanDetailVo, opts ...grpc.CallOption) (*Empty, error)
		UpgradePkgPlanDetailDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		UpgradePkgPlanDetailGet(ctx context.Context, in *UpgradePkgPlanDetailVo, opts ...grpc.CallOption) (*UpgradePkgPlanDetailVo, error)
		UpgradePkgPlanDetailList(ctx context.Context, in *UpgradePkgPlanDetailListReq, opts ...grpc.CallOption) (*UpgradePkgPlanDetailListResp, error)
		// UpgradeResPlan
		UpgradeResPlanAdd(ctx context.Context, in *UpgradeResPlanVo, opts ...grpc.CallOption) (*UpgradeResPlanVo, error)
		UpgradeResPlanUpdate(ctx context.Context, in *UpgradeResPlanVo, opts ...grpc.CallOption) (*Empty, error)
		UpgradeResPlanDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		UpgradeResPlanGet(ctx context.Context, in *UpgradeResPlanVo, opts ...grpc.CallOption) (*UpgradeResPlanVo, error)
		UpgradeResPlanList(ctx context.Context, in *UpgradeResPlanListReq, opts ...grpc.CallOption) (*UpgradeResPlanListResp, error)
		// UpgradeResPlanDetail
		UpgradeResPlanDetailAdd(ctx context.Context, in *UpgradeResPlanDetailVo, opts ...grpc.CallOption) (*UpgradeResPlanDetailVo, error)
		UpgradeResPlanDetailUpdate(ctx context.Context, in *UpgradeResPlanDetailVo, opts ...grpc.CallOption) (*Empty, error)
		UpgradeResPlanDetailDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error)
		UpgradeResPlanDetailGet(ctx context.Context, in *UpgradeResPlanDetailVo, opts ...grpc.CallOption) (*UpgradeResPlanDetailVo, error)
		UpgradeResPlanDetailList(ctx context.Context, in *UpgradeResPlanDetailListReq, opts ...grpc.CallOption) (*UpgradeResPlanDetailListResp, error)
	}

	defaultGoPmpClient struct {
		cli zrpc.Client
	}
)

func NewGoPmpClient(cli zrpc.Client) GoPmpClient {
	return &defaultGoPmpClient{
		cli: cli,
	}
}

func (m *defaultGoPmpClient) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

// GlobalParamVo
func (m *defaultGoPmpClient) GlobalParamAdd(ctx context.Context, in *GlobalParamVo, opts ...grpc.CallOption) (*GlobalParamVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.GlobalParamAdd(ctx, in, opts...)
}

func (m *defaultGoPmpClient) GlobalParamUpdate(ctx context.Context, in *GlobalParamVo, opts ...grpc.CallOption) (*GlobalParamVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.GlobalParamUpdate(ctx, in, opts...)
}

func (m *defaultGoPmpClient) GlobalParamDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.GlobalParamDel(ctx, in, opts...)
}

func (m *defaultGoPmpClient) GlobalParamGet(ctx context.Context, in *GlobalParamVo, opts ...grpc.CallOption) (*GlobalParamVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.GlobalParamGet(ctx, in, opts...)
}

func (m *defaultGoPmpClient) GlobalParamList(ctx context.Context, in *GlobalParamListReq, opts ...grpc.CallOption) (*GlobalParamListResp, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.GlobalParamList(ctx, in, opts...)
}

// ProductVo
func (m *defaultGoPmpClient) ProductAdd(ctx context.Context, in *ProductVo, opts ...grpc.CallOption) (*ProductVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.ProductAdd(ctx, in, opts...)
}

func (m *defaultGoPmpClient) ProductUpdate(ctx context.Context, in *ProductVo, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.ProductUpdate(ctx, in, opts...)
}

func (m *defaultGoPmpClient) ProductDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.ProductDel(ctx, in, opts...)
}

func (m *defaultGoPmpClient) ProductGet(ctx context.Context, in *ProductVo, opts ...grpc.CallOption) (*ProductVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.ProductGet(ctx, in, opts...)
}

func (m *defaultGoPmpClient) ProductList(ctx context.Context, in *ProductListReq, opts ...grpc.CallOption) (*ProductListResp, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.ProductList(ctx, in, opts...)
}

func (m *defaultGoPmpClient) ProductAll(ctx context.Context, in *Request, opts ...grpc.CallOption) (*ProductListResp, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.ProductAll(ctx, in, opts...)
}

// ProductParamVo
func (m *defaultGoPmpClient) ProductParamUpdate(ctx context.Context, in *ProductParamVo, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.ProductParamUpdate(ctx, in, opts...)
}

// rpc ProductParamDel(Ids) returns (Empty);
func (m *defaultGoPmpClient) ProductParamGet(ctx context.Context, in *ProductParamVo, opts ...grpc.CallOption) (*ProductParamVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.ProductParamGet(ctx, in, opts...)
}

func (m *defaultGoPmpClient) ProductParamList(ctx context.Context, in *ProductParamListReq, opts ...grpc.CallOption) (*ProductParamListResp, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.ProductParamList(ctx, in, opts...)
}

// ProductAction 产品行为配置
func (m *defaultGoPmpClient) ProductActionAdd(ctx context.Context, in *ProductActionVo, opts ...grpc.CallOption) (*ProductActionVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.ProductActionAdd(ctx, in, opts...)
}

func (m *defaultGoPmpClient) ProductActionUpdate(ctx context.Context, in *ProductActionVo, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.ProductActionUpdate(ctx, in, opts...)
}

func (m *defaultGoPmpClient) ProductActionDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.ProductActionDel(ctx, in, opts...)
}

func (m *defaultGoPmpClient) ProductActionGet(ctx context.Context, in *ProductActionReq, opts ...grpc.CallOption) (*ProductActionVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.ProductActionGet(ctx, in, opts...)
}

func (m *defaultGoPmpClient) ProductActionList(ctx context.Context, in *ProductActionListReq, opts ...grpc.CallOption) (*ProductActionListRes, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.ProductActionList(ctx, in, opts...)
}

// AreaParamVo
func (m *defaultGoPmpClient) AreaParamAdd(ctx context.Context, in *AreaParamVo, opts ...grpc.CallOption) (*AreaParamVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.AreaParamAdd(ctx, in, opts...)
}

func (m *defaultGoPmpClient) AreaParamUpdate(ctx context.Context, in *AreaParamVo, opts ...grpc.CallOption) (*AreaParamVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.AreaParamUpdate(ctx, in, opts...)
}

func (m *defaultGoPmpClient) AreaParamDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.AreaParamDel(ctx, in, opts...)
}

func (m *defaultGoPmpClient) AreaParamGet(ctx context.Context, in *AreaParamVo, opts ...grpc.CallOption) (*AreaParamVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.AreaParamGet(ctx, in, opts...)
}

func (m *defaultGoPmpClient) AreaParamList(ctx context.Context, in *AreaParamListReq, opts ...grpc.CallOption) (*AreaParamListResp, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.AreaParamList(ctx, in, opts...)
}

// NationalLanguage
func (m *defaultGoPmpClient) NationalLanguageAdd(ctx context.Context, in *NationalLanguageVo, opts ...grpc.CallOption) (*NationalLanguageVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.NationalLanguageAdd(ctx, in, opts...)
}

func (m *defaultGoPmpClient) NationalLanguageUpdate(ctx context.Context, in *NationalLanguageVo, opts ...grpc.CallOption) (*NationalLanguageVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.NationalLanguageUpdate(ctx, in, opts...)
}

func (m *defaultGoPmpClient) NationalLanguageDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.NationalLanguageDel(ctx, in, opts...)
}

func (m *defaultGoPmpClient) NationalLanguageGet(ctx context.Context, in *NationalLanguageVo, opts ...grpc.CallOption) (*NationalLanguageVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.NationalLanguageGet(ctx, in, opts...)
}

func (m *defaultGoPmpClient) NationalLanguageList(ctx context.Context, in *NationalLanguageListReq, opts ...grpc.CallOption) (*NationalLanguageListResp, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.NationalLanguageList(ctx, in, opts...)
}

// Tip
func (m *defaultGoPmpClient) TipAdd(ctx context.Context, in *TipVo, opts ...grpc.CallOption) (*TipVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.TipAdd(ctx, in, opts...)
}

func (m *defaultGoPmpClient) TipUpdate(ctx context.Context, in *TipVo, opts ...grpc.CallOption) (*TipVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.TipUpdate(ctx, in, opts...)
}

func (m *defaultGoPmpClient) TipDel(ctx context.Context, in *TipDelReq, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.TipDel(ctx, in, opts...)
}

func (m *defaultGoPmpClient) TipGet(ctx context.Context, in *TipVo, opts ...grpc.CallOption) (*TipVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.TipGet(ctx, in, opts...)
}

func (m *defaultGoPmpClient) TipList(ctx context.Context, in *TipListReq, opts ...grpc.CallOption) (*TipListResp, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.TipList(ctx, in, opts...)
}

// UpgradeRes 热更新代码资源管理
func (m *defaultGoPmpClient) UpgradeResAdd(ctx context.Context, in *UpgradeResVo, opts ...grpc.CallOption) (*UpgradeResVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResAdd(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResUpdate(ctx context.Context, in *UpgradeResVo, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResUpdate(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResDel(ctx context.Context, in *ResourceDelReq, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResDel(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResGet(ctx context.Context, in *UpgradeResGetReq, opts ...grpc.CallOption) (*UpgradeResVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResGet(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResList(ctx context.Context, in *UpgradeResListReq, opts ...grpc.CallOption) (*UpgradeResListResp, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResList(ctx, in, opts...)
}

// UpgradePkg app 包更新管理
func (m *defaultGoPmpClient) UpgradePkgAdd(ctx context.Context, in *UpgradePkgVo, opts ...grpc.CallOption) (*UpgradePkgVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradePkgAdd(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradePkgUpdate(ctx context.Context, in *UpgradePkgVo, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradePkgUpdate(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradePkgDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradePkgDel(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradePkgGet(ctx context.Context, in *UpgradePkgGetReq, opts ...grpc.CallOption) (*UpgradePkgVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradePkgGet(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradePkgList(ctx context.Context, in *UpgradePkgListReq, opts ...grpc.CallOption) (*UpgradePkgListResp, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradePkgList(ctx, in, opts...)
}

// UpgradeResConfig 热更新【代码资源】配置管理，控制哪些版本地区的用户可以更新
func (m *defaultGoPmpClient) UpgradeResConfigAdd(ctx context.Context, in *UpgradeResConfigVo, opts ...grpc.CallOption) (*UpgradeResConfigVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResConfigAdd(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResConfigUpdate(ctx context.Context, in *UpgradeResConfigVo, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResConfigUpdate(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResConfigDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResConfigDel(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResConfigGet(ctx context.Context, in *UpgradeResConfigGetReq, opts ...grpc.CallOption) (*UpgradeResConfigVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResConfigGet(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResConfigList(ctx context.Context, in *UpgradeResConfigListReq, opts ...grpc.CallOption) (*UpgradeResConfigListResp, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResConfigList(ctx, in, opts...)
}

func (m *defaultGoPmpClient) DictAdd(ctx context.Context, in *DictVo, opts ...grpc.CallOption) (*DictVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.DictAdd(ctx, in, opts...)
}

func (m *defaultGoPmpClient) DictUpdate(ctx context.Context, in *DictVo, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.DictUpdate(ctx, in, opts...)
}

func (m *defaultGoPmpClient) DictDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.DictDel(ctx, in, opts...)
}

func (m *defaultGoPmpClient) DictGet(ctx context.Context, in *DictGetReq, opts ...grpc.CallOption) (*DictVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.DictGet(ctx, in, opts...)
}

func (m *defaultGoPmpClient) DictList(ctx context.Context, in *DictListReq, opts ...grpc.CallOption) (*DictListResp, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.DictList(ctx, in, opts...)
}

// UpgradePkgPlan
func (m *defaultGoPmpClient) UpgradePkgPlanAdd(ctx context.Context, in *UpgradePkgPlanVo, opts ...grpc.CallOption) (*UpgradePkgPlanVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradePkgPlanAdd(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradePkgPlanUpdate(ctx context.Context, in *UpgradePkgPlanVo, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradePkgPlanUpdate(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradePkgPlanDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradePkgPlanDel(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradePkgPlanGet(ctx context.Context, in *UpgradePkgPlanVo, opts ...grpc.CallOption) (*UpgradePkgPlanVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradePkgPlanGet(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradePkgPlanList(ctx context.Context, in *UpgradePkgPlanListReq, opts ...grpc.CallOption) (*UpgradePkgPlanListResp, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradePkgPlanList(ctx, in, opts...)
}

// UpgradePkgPlanDetail
func (m *defaultGoPmpClient) UpgradePkgPlanDetailAdd(ctx context.Context, in *UpgradePkgPlanDetailVo, opts ...grpc.CallOption) (*UpgradePkgPlanDetailVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradePkgPlanDetailAdd(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradePkgPlanDetailUpdate(ctx context.Context, in *UpgradePkgPlanDetailVo, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradePkgPlanDetailUpdate(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradePkgPlanDetailDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradePkgPlanDetailDel(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradePkgPlanDetailGet(ctx context.Context, in *UpgradePkgPlanDetailVo, opts ...grpc.CallOption) (*UpgradePkgPlanDetailVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradePkgPlanDetailGet(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradePkgPlanDetailList(ctx context.Context, in *UpgradePkgPlanDetailListReq, opts ...grpc.CallOption) (*UpgradePkgPlanDetailListResp, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradePkgPlanDetailList(ctx, in, opts...)
}

// UpgradeResPlan
func (m *defaultGoPmpClient) UpgradeResPlanAdd(ctx context.Context, in *UpgradeResPlanVo, opts ...grpc.CallOption) (*UpgradeResPlanVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResPlanAdd(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResPlanUpdate(ctx context.Context, in *UpgradeResPlanVo, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResPlanUpdate(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResPlanDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResPlanDel(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResPlanGet(ctx context.Context, in *UpgradeResPlanVo, opts ...grpc.CallOption) (*UpgradeResPlanVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResPlanGet(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResPlanList(ctx context.Context, in *UpgradeResPlanListReq, opts ...grpc.CallOption) (*UpgradeResPlanListResp, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResPlanList(ctx, in, opts...)
}

// UpgradeResPlanDetail
func (m *defaultGoPmpClient) UpgradeResPlanDetailAdd(ctx context.Context, in *UpgradeResPlanDetailVo, opts ...grpc.CallOption) (*UpgradeResPlanDetailVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResPlanDetailAdd(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResPlanDetailUpdate(ctx context.Context, in *UpgradeResPlanDetailVo, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResPlanDetailUpdate(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResPlanDetailDel(ctx context.Context, in *Ids, opts ...grpc.CallOption) (*Empty, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResPlanDetailDel(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResPlanDetailGet(ctx context.Context, in *UpgradeResPlanDetailVo, opts ...grpc.CallOption) (*UpgradeResPlanDetailVo, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResPlanDetailGet(ctx, in, opts...)
}

func (m *defaultGoPmpClient) UpgradeResPlanDetailList(ctx context.Context, in *UpgradeResPlanDetailListReq, opts ...grpc.CallOption) (*UpgradeResPlanDetailListResp, error) {
	client := gorpc.NewGoPmpClientClient(m.cli.Conn())
	return client.UpgradeResPlanDetailList(ctx, in, opts...)
}
